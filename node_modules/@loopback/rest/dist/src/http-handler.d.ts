/// <reference types="node" />
import { Context } from '@loopback/context';
import { PathsObject } from '@loopback/openapi-spec';
import { ServerRequest, ServerResponse } from 'http';
import { ControllerSpec } from './router/metadata';
import { RoutingTable, ResolvedRoute, RouteEntry, ControllerClass } from './router/routing-table';
import { ParsedRequest } from './internal-types';
export declare class HttpHandler {
    protected _rootContext: Context;
    protected _routes: RoutingTable;
    handleRequest: (request: ServerRequest, response: ServerResponse) => Promise<void>;
    constructor(_rootContext: Context);
    registerController(name: ControllerClass, spec: ControllerSpec): void;
    registerRoute(route: RouteEntry): void;
    describeApiPaths(): PathsObject;
    findRoute(request: ParsedRequest): ResolvedRoute;
    protected _handleRequest(request: ServerRequest, response: ServerResponse): Promise<void>;
    protected _createRequestContext(req: ServerRequest, res: ServerResponse): Context;
}
